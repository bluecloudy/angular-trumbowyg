{"version":3,"sources":["src/app.js","src/components/trumbowyg/trumbowyg.js","templates.js","src/components/trumbowyg/trumbowyg.html"],"names":["angular","module","component","templateUrl","bindings","options","ngDisabled","placeholder","onFocus","onBlur","onInit","onChange","onResize","onPaste","onOpenfullscreen","onClosefullscreen","onClose","require","ngModel","controller","$element","$scope","$attrs","_this","this","TBW_EVENTS","EVENTS_PREFIX","getElementReference","element","find","getEditorReference","updateModelValue","$applyAsync","value","trumbowyg","$setViewValue","emitEvent","event","attr","$normalize","isFunction","initializeEditor","on","forEach","$render","$onDestroy","$onChanges","changes","isFirstChange","extend","$onInit","$modelValue","run","$templateCache","put"],"mappings":"AAAA,YAAAA,SAAQC,OAAO;ACAf,YAAAD,SAAQC,OAAO,aACZC,UAAU,aACTC,YAAa,gDACbC,UACEC,QAAS,KACTC,WAAY,KACZC,YAAa,KACbC,QAAS,KACTC,OAAQ,KACRC,OAAQ,KACRC,SAAU,KACVC,SAAU,KACVC,QAAS,KACTC,iBAAkB,KAClBC,kBAAmB,KACnBC,QAAS,MAEXC,SACEC,QAAS,WAEXC,YACE,WACA,SACA,SACA,SAAUC,EAAUC,EAAQC,GAAQ,GAAAC,GAAAC,KAC5BC,GACJ,QACA,OACA,OACA,SACA,SACA,QACA,iBACA,kBACA,SAEFC,EAAgB,KAEhBF,MAAKG,oBAAsB,WAAA,MAAM3B,SAAQ4B,QAAQR,EAASS,KAAK,WAE/DL,KAAKM,mBAAqB,WAAA,MAAMP,GAAKI,sBAAsBE,KAAK,sBAEhEL,KAAKO,iBAAmB,WACtBV,EAAOW,YAAY,WACjB,GAAMC,GAAQV,EAAKO,qBAAqBI,UAAU,OAClDX,GAAKL,QAAQiB,cAAcF,MAI/BT,KAAKY,UAAY,SAACC,GAChB,GAAMC,GAAOhB,EAAOiB,WAAP,MAAwBF,EACjCrC,SAAQwC,WAAWjB,EAAKe,KAC1BjB,EAAOW,YAAY,WAAA,MAAMT,GAAKe,QAIlCd,KAAKiB,iBAAmB,SAACb,EAASvB,GAChCuB,EAAQM,UAAU7B,GACfqC,GAAG,YAAa,WAAA,MAAMnB,GAAKQ,qBAC3BW,GAAG,WAAY,WAAA,MAAMnB,GAAKQ,qBAC7B/B,QAAQ2C,QAAQlB,EAAY,SAACY,GAC3BT,EAAQc,GAAR,GAAchB,EAAgBW,EAAS,WAAA,MAAMd,GAAKa,UAAUC,OAE9Dd,EAAKL,QAAQ0B,WAGfpB,KAAKqB,WAAa,WAChBtB,EAAKI,sBAAsBO,UAAU,YAGvCV,KAAKsB,WAAa,SAACC,GACjB,GAAMnB,GAAUL,EAAKI,qBAEjBoB,GAAQ1C,UAAY0C,EAAQ1C,QAAQ2C,iBACtCpB,EAAQM,UAAU,WAGhBa,EAAQ1C,SACVkB,EAAKkB,iBAAiBb,EAAS5B,QAAQiD,UAAW1B,EAAKlB,UAGrD0C,EAAQzC,YACViB,EAAKW,UAAUX,EAAKjB,WAAa,UAAY,UAG3CyC,EAAQxC,aACVgB,EAAKO,qBAAqBQ,KAAK,cAAef,EAAKhB,cAIvDiB,KAAK0B,QAAU,WACb3B,EAAKL,QAAQ0B,QAAU,WACrB,GAAMhB,GAAUL,EAAKO,oBACrBF,GAAQM,UAAU,OAAQX,EAAKL,QAAQiC;AC7FnD,YAAAnD,SAAQC,OAAO,aAAamD,KAAK,iBAAkB,SAASC,GCA5DA,EAAAC,IAAA,gDAAA","file":"angular-trumbowyg.min.js","sourcesContent":["angular.module('trumbowyg', []);\n","angular.module('trumbowyg')\n  .component('trumbowyg', {\n    templateUrl: 'trumbowyg/components/trumbowyg/trumbowyg.html',\n    bindings: {\n      options: '<?',\n      ngDisabled: '<?',\n      placeholder: '@?',\n      onFocus: '&?',\n      onBlur: '&?',\n      onInit: '&?',\n      onChange: '&?',\n      onResize: '&?',\n      onPaste: '&?',\n      onOpenfullscreen: '&?',\n      onClosefullscreen: '&?',\n      onClose: '&?',\n    },\n    require: {\n      ngModel: 'ngModel'\n    },\n    controller: [\n      '$element',\n      '$scope',\n      '$attrs',\n      function ($element, $scope, $attrs) {\n        const TBW_EVENTS = [\n          'focus',\n          'blur',\n          'init',\n          'change',\n          'resize',\n          'paste',\n          'openfullscreen',\n          'closefullscreen',\n          'close'\n        ],\n        EVENTS_PREFIX = 'tbw';\n\n        this.getElementReference = () => angular.element($element.find('> div'));\n\n        this.getEditorReference = () => this.getElementReference().find('.trumbowyg-editor');\n\n        this.updateModelValue = () => {\n          $scope.$applyAsync(() => {\n            const value = this.getEditorReference().trumbowyg('html');\n            this.ngModel.$setViewValue(value)\n          });\n        }\n\n        this.emitEvent = (event) => {\n          const attr = $attrs.$normalize(`on-${event}`);\n          if (angular.isFunction(this[attr])) {\n            $scope.$applyAsync(() => this[attr]());\n          }\n        }\n\n        this.initializeEditor = (element, options) => {\n          element.trumbowyg(options)\n            .on('tbwchange', () => this.updateModelValue())\n            .on('tbwpaste', () => this.updateModelValue());\n          angular.forEach(TBW_EVENTS, (event) => {\n            element.on(`${EVENTS_PREFIX}${event}`, () => this.emitEvent(event));\n          })\n          this.ngModel.$render();\n        }\n\n        this.$onDestroy = () => {\n          this.getElementReference().trumbowyg('destroy');\n        };\n\n        this.$onChanges = (changes) => {\n          const element = this.getElementReference();\n\n          if (changes.options && !changes.options.isFirstChange()) {\n            element.trumbowyg('destroy');\n          }\n\n          if (changes.options) {\n            this.initializeEditor(element, angular.extend({}, this.options));\n          }\n\n          if (changes.ngDisabled) {\n            this.trumbowyg(this.ngDisabled ? 'disable' : 'enable');\n          }\n\n          if (changes.placeholder) {\n            this.getEditorReference().attr('placeholder', this.placeholder);\n          }\n        };\n\n        this.$onInit = () => {\n          this.ngModel.$render = () => {\n            const element = this.getEditorReference();\n            element.trumbowyg('html', this.ngModel.$modelValue);\n          };\n        };\n      }\n    ]\n  });\n","angular.module('trumbowyg').run(['$templateCache', function($templateCache) {$templateCache.put('trumbowyg/components/trumbowyg/trumbowyg.html','<style media=\"screen\">\\n  trumbowyg {\\n    display: block;\\n  }\\n</style>\\n<div></div>\\n');}]);","<style media=\"screen\">\n  trumbowyg {\n    display: block;\n  }\n</style>\n<div></div>\n"],"sourceRoot":"/source/"}